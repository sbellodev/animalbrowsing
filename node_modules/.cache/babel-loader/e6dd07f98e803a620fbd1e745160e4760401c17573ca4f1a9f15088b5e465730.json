{"ast":null,"code":"//\n//  Parser - for Twitter Streaming API\n//\nvar util = require('util'),\n  EventEmitter = require('events').EventEmitter;\nvar Parser = module.exports = function () {\n  this.message = '';\n  EventEmitter.call(this);\n};\nutil.inherits(Parser, EventEmitter);\nParser.prototype.parse = function (chunk) {\n  this.message += chunk;\n  chunk = this.message;\n  var size = chunk.length,\n    start = 0,\n    offset = 0,\n    curr,\n    next;\n  while (offset < size) {\n    curr = chunk[offset];\n    next = chunk[offset + 1];\n    if (curr === '\\r' && next === '\\n') {\n      var piece = chunk.slice(start, offset);\n      start = offset += 2;\n      if (!piece.length) {\n        continue;\n      } //empty object\n\n      if (piece === 'Exceeded connection limit for user') {\n        this.emit('connection-limit-exceeded', new Error('Twitter says: ' + piece + '. Only instantiate one stream per set of credentials.'));\n        continue;\n      }\n      try {\n        var msg = JSON.parse(piece);\n      } catch (err) {\n        this.emit('error', new Error('Error parsing twitter reply: `' + piece + '`, error message `' + err + '`'));\n      } finally {\n        if (msg) this.emit('element', msg);\n        continue;\n      }\n    }\n    offset++;\n  }\n  this.message = chunk.slice(start, size);\n};","map":{"version":3,"names":["util","require","EventEmitter","Parser","module","exports","message","call","inherits","prototype","parse","chunk","size","length","start","offset","curr","next","piece","slice","emit","Error","msg","JSON","err"],"sources":["C:/Users/Sanity/Documents/GitHub/animalbrowsing/node_modules/twit/lib/parser.js"],"sourcesContent":["//\n//  Parser - for Twitter Streaming API\n//\nvar util = require('util')\n  , EventEmitter = require('events').EventEmitter;\n\nvar Parser = module.exports = function ()  {\n  this.message = ''\n\n  EventEmitter.call(this);\n};\n\nutil.inherits(Parser, EventEmitter);\n\nParser.prototype.parse = function (chunk) {\n  this.message += chunk;\n  chunk = this.message;\n\n  var size = chunk.length\n    , start = 0\n    , offset = 0\n    , curr\n    , next;\n\n  while (offset < size) {\n    curr = chunk[offset];\n    next = chunk[offset + 1];\n\n    if (curr === '\\r' && next === '\\n') {\n      var piece = chunk.slice(start, offset);\n      start = offset += 2;\n\n      if (!piece.length) { continue; } //empty object\n\n      if (piece === 'Exceeded connection limit for user') {\n        this.emit('connection-limit-exceeded',\n                  new Error('Twitter says: ' + piece + '. Only instantiate one stream per set of credentials.'));\n        continue;\n      }\n\n      try {\n        var msg = JSON.parse(piece)\n      } catch (err) {\n        this.emit('error', new Error('Error parsing twitter reply: `'+piece+'`, error message `'+err+'`'));\n      } finally {\n        if (msg)\n          this.emit('element', msg)\n\n        continue\n      }\n    }\n    offset++;\n  }\n\n  this.message = chunk.slice(start, size);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;EACtBC,YAAY,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,YAAY;AAEjD,IAAIC,MAAM,GAAGC,MAAM,CAACC,OAAO,GAAG,YAAa;EACzC,IAAI,CAACC,OAAO,GAAG,EAAE;EAEjBJ,YAAY,CAACK,IAAI,CAAC,IAAI,CAAC;AACzB,CAAC;AAEDP,IAAI,CAACQ,QAAQ,CAACL,MAAM,EAAED,YAAY,CAAC;AAEnCC,MAAM,CAACM,SAAS,CAACC,KAAK,GAAG,UAAUC,KAAK,EAAE;EACxC,IAAI,CAACL,OAAO,IAAIK,KAAK;EACrBA,KAAK,GAAG,IAAI,CAACL,OAAO;EAEpB,IAAIM,IAAI,GAAGD,KAAK,CAACE,MAAM;IACnBC,KAAK,GAAG,CAAC;IACTC,MAAM,GAAG,CAAC;IACVC,IAAI;IACJC,IAAI;EAER,OAAOF,MAAM,GAAGH,IAAI,EAAE;IACpBI,IAAI,GAAGL,KAAK,CAACI,MAAM,CAAC;IACpBE,IAAI,GAAGN,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC;IAExB,IAAIC,IAAI,KAAK,IAAI,IAAIC,IAAI,KAAK,IAAI,EAAE;MAClC,IAAIC,KAAK,GAAGP,KAAK,CAACQ,KAAK,CAACL,KAAK,EAAEC,MAAM,CAAC;MACtCD,KAAK,GAAGC,MAAM,IAAI,CAAC;MAEnB,IAAI,CAACG,KAAK,CAACL,MAAM,EAAE;QAAE;MAAU,CAAC,CAAC;;MAEjC,IAAIK,KAAK,KAAK,oCAAoC,EAAE;QAClD,IAAI,CAACE,IAAI,CAAC,2BAA2B,EAC3B,IAAIC,KAAK,CAAC,gBAAgB,GAAGH,KAAK,GAAG,uDAAuD,CAAC,CAAC;QACxG;MACF;MAEA,IAAI;QACF,IAAII,GAAG,GAAGC,IAAI,CAACb,KAAK,CAACQ,KAAK,CAAC;MAC7B,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZ,IAAI,CAACJ,IAAI,CAAC,OAAO,EAAE,IAAIC,KAAK,CAAC,gCAAgC,GAACH,KAAK,GAAC,oBAAoB,GAACM,GAAG,GAAC,GAAG,CAAC,CAAC;MACpG,CAAC,SAAS;QACR,IAAIF,GAAG,EACL,IAAI,CAACF,IAAI,CAAC,SAAS,EAAEE,GAAG,CAAC;QAE3B;MACF;IACF;IACAP,MAAM,EAAE;EACV;EAEA,IAAI,CAACT,OAAO,GAAGK,KAAK,CAACQ,KAAK,CAACL,KAAK,EAAEF,IAAI,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}