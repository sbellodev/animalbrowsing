{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Sanity/Documents/GitHub/animalbrowsing/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";var sortSearch=function sortSearch(table,inputSearch){return table.filter(function(v){inputSearch=inputSearch.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g,\"\");return v.Name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g,\"\").includes(inputSearch)||v.PriceInt.toString().includes(inputSearch)||v.Season.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g,\"\").includes(inputSearch)||v.Time.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g,\"\").includes(inputSearch)||v.Location&&v.Location.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g,\"\").includes(inputSearch)||v.Pattern&&v.Pattern.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g,\"\").includes(inputSearch)||v.Size&&v.Size.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g,\"\").includes(inputSearch);});};var sortSeason=function sortSeason(table,imgEarth,clickCount){var btn_season=document.getElementsByClassName(\"btn-season\")[0];switch(clickCount){case 1:btn_season.src=imgEarth.EarthNPNG;break;case 2:btn_season.src=imgEarth.EarthSPNG;break;case 0:default:btn_season.src=imgEarth.Earth;break;}var time=new Date();var current_month=time.getMonth()+1;return table.filter(function(v){v.Temp=clickCount===1?v.SeasonN:clickCount===2?v.SeasonS:\"\";var Season;switch(clickCount){case 1:Season=v.SeasonIntN;break;case 2:Season=v.SeasonIntS;break;default:return v;}if(Season.length===1&&current_month===Season[0]){// ex: Firefly\nreturn true;}else if(Season.length===2){// ex: Mar-Apr (3, 4)\nif(Season[0]<Season[1]){if(current_month>=Season[0]&&current_month<=Season[1]){return true;}}else if(Season[0]>Season[1]){if(current_month>=Season[0]||current_month<=Season[1]){return true;}}}else if(Season.length===3){// ex: Mar-Apr, Jun (3, 4, 6) \nif(current_month===Season[2]){return true;}if(Season[0]<Season[1]){if(current_month>=Season[0]&&current_month<=Season[1]){return true;}}else if(Season[0]>Season[1]){if(current_month>=Season[0]||current_month<=Season[1]){return true;}}}else if(Season.length===4){// ex: Mar-Apr, Jun-Jul (3, 4, 6, 7) \nif(Season[0]<Season[1]){if(current_month>=Season[0]&&current_month<=Season[1]){return true;}}else if(Season[2]<Season[3]){if(current_month>=Season[2]&&current_month<=Season[3]){return true;}}else if(Season[0]>Season[1]){if(current_month>=Season[0]||current_month<=Season[1]){return true;}}else if(Season[2]>Season[3]){if(current_month>=Season[2]||current_month<=Season[3]){return true;}}}return false;});};var sortABC=function sortABC(table){return _toConsumableArray(table).sort(function(a,b){return a.Name>b.Name?1:a.Name<b.Name?-1:0;});};var sortPrice=function sortPrice(table){return _toConsumableArray(table).sort(function(a,b){return b.PriceInt-a.PriceInt;});};var sortReset=function sortReset(table){return _toConsumableArray(table).sort(function(a,b){return a.Number-b.Number;});};export{sortSearch,sortSeason,sortABC,sortPrice,sortReset};","map":{"version":3,"names":["sortSearch","table","inputSearch","filter","v","toLowerCase","normalize","replace","Name","includes","PriceInt","toString","Season","Time","Location","Pattern","Size","sortSeason","imgEarth","clickCount","btn_season","document","getElementsByClassName","src","EarthNPNG","EarthSPNG","Earth","time","Date","current_month","getMonth","Temp","SeasonN","SeasonS","SeasonIntN","SeasonIntS","length","sortABC","_toConsumableArray","sort","a","b","sortPrice","sortReset","Number"],"sources":["C:/Users/Sanity/Documents/GitHub/animalbrowsing/src/logic/table.js"],"sourcesContent":["const sortSearch = (table, inputSearch) => {\r\n    return table.filter((v) => {\r\n        inputSearch = inputSearch.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\")\r\n        return (\r\n            v.Name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) ||\r\n            v.PriceInt.toString().includes(inputSearch) ||\r\n            v.Season.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) ||\r\n            v.Time.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) ||\r\n            (v.Location && v.Location.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch)) ||\r\n            (v.Pattern && v.Pattern.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch)) ||\r\n            (v.Size && v.Size.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch)) \r\n            )\r\n        })\r\n}\r\nconst sortSeason = (table, imgEarth, clickCount) => {\r\n    let btn_season = document.getElementsByClassName(\"btn-season\")[0]\r\n    switch(clickCount) {\r\n        case 1:\r\n            btn_season.src = imgEarth.EarthNPNG\r\n            break;\r\n        case 2:\r\n            btn_season.src = imgEarth.EarthSPNG\r\n            break;\r\n        case 0:\r\n        default:\r\n            btn_season.src = imgEarth.Earth                \r\n            break;\r\n    }\r\n\r\n    var time = new Date();\r\n    let current_month = time.getMonth() + 1\r\n\r\n    return table.filter((v) => {\r\n        v.Temp = clickCount === 1 ? v.SeasonN : clickCount === 2 ? v.SeasonS : \"\"  \r\n        let Season\r\n        switch(clickCount){\r\n            case 1:\r\n                Season = v.SeasonIntN\r\n                break\r\n            case 2:\r\n                Season = v.SeasonIntS\r\n                break\r\n            default:\r\n                return v\r\n        }\r\n\r\n        if(Season.length === 1 && current_month === Season[0]) { // ex: Firefly\r\n                return true\r\n        }\r\n        else if(Season.length === 2) { // ex: Mar-Apr (3, 4)\r\n            if(Season[0] < Season[1]) {\r\n                if(current_month >=  Season[0] && current_month <=  Season[1]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[0] > Season[1]) {\r\n                if(current_month >=  Season[0] || current_month <=  Season[1]) {\r\n                    return true\r\n                } \r\n            }\r\n        }\r\n        else if(Season.length === 3) { // ex: Mar-Apr, Jun (3, 4, 6) \r\n            if(current_month === Season[2]) {\r\n                return true\r\n            }\r\n            if(Season[0] < Season[1]) {\r\n                if(current_month >=  Season[0] && current_month <=  Season[1]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[0] > Season[1]) {\r\n                if(current_month >=  Season[0] || current_month <=  Season[1]) {\r\n                    return true\r\n                } \r\n            }\r\n        }\r\n        else if(Season.length === 4) { // ex: Mar-Apr, Jun-Jul (3, 4, 6, 7) \r\n            if(Season[0] < Season[1]) {\r\n                if(current_month >=  Season[0] && current_month <=  Season[1]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[2] < Season[3]) {\r\n                if(current_month >=  Season[2] && current_month <=  Season[3]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[0] > Season[1]) {\r\n                if(current_month >=  Season[0] || current_month <=  Season[1]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[2] > Season[3]) {\r\n                if(current_month >=  Season[2] || current_month <=  Season[3]) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n\r\n        return false\r\n    })\r\n}\r\nconst sortABC = (table) => { \r\n    return [...table].sort((a, b) => \r\n        a.Name > b.Name ? 1 :\r\n        a.Name < b.Name ? -1 : 0)\r\n}\r\nconst sortPrice = (table) => { \r\n    return [...table].sort((a, b) => b.PriceInt - a.PriceInt)\r\n}\r\nconst sortReset = (table) => { \r\n    return [...table].sort((a, b) => a.Number - b.Number)\r\n}\r\n\r\nexport { sortSearch, sortSeason, sortABC, sortPrice, sortReset }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}