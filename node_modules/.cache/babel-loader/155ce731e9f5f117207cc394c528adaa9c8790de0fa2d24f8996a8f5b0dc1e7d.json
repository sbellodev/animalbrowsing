{"ast":null,"code":"const contentAPI = res => {\n  let shortUrl = /https:\\/\\/t\\.co\\/+.{10}/g;\n  let showResponse = res.map(tweet => {\n    if (tweet.text) {\n      tweet.text = tweet.text.replace(\"'\\n' +\", \"\");\n      tweet.date = new Date(tweet.date).toLocaleString('es-ES');\n      if (tweet.entities.media) {\n        // has image\n        tweet.text = tweet.text.replace(tweet.entities.media[0].url, \"<img src='\" + tweet.entities.media[0].media_url + \"' />\");\n      }\n      // urls[0] needed because API structure\n      if (tweet.entities.urls && tweet.entities.urls[0]) {\n        // has other urls\n        let num_of_urls = tweet.entities.urls.length;\n        let last_url = num_of_urls - 1;\n        if (tweet.entities.urls[last_url].expanded_url.includes(\"/i/web/status\")) {\n          // remove status url\n          tweet.text = tweet.text.replace(tweet.entities.urls[last_url].url, \"\");\n        }\n        tweet.entities.urls.forEach(url => {\n          // clickable links\n          tweet.text = tweet.text.replace(shortUrl, \"<br/><a href='\" + url.expanded_url + \"' target='_blank' rel='noopener noreferrer' >\" + url.expanded_url.slice(0, 23) + \"...</a><br/>\");\n        });\n      }\n    }\n    return '<div class=\"tweet_individual\">' + '<a href=\"https://twitter.com/' + tweet.screen_name + '\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"display:flex;align-items:center;\"><div style=\"padding-bottom:0\"><img style=\"width:35px;border-radius:20px;display:inline;margin: 0 auto;\" src=\"' + tweet.profile_image + '\"/></div><span style=\"margin:10px;\">@' + tweet.screen_name + '</span></a>' + '<p>' + tweet.text + '</p>' + '<p class=\"tweet-date\"><a href=\"https://twitter.com/i/web/status/' + tweet.id + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + tweet.date + '</a></p>' + '<p><a href=\"https://twitter.com/i/web/status/' + tweet.id + '\" target=\"_blank\" rel=\"noopener noreferrer\">Ver más</a></p>' + '</div>';\n  }).join('');\n  return '<div class=\"blob_container\"><div class=\"blob red\"></div></div>' + showResponse;\n};\nexport { contentAPI };","map":{"version":3,"names":["contentAPI","res","shortUrl","showResponse","map","tweet","text","replace","date","Date","toLocaleString","entities","media","url","media_url","urls","num_of_urls","length","last_url","expanded_url","includes","forEach","slice","screen_name","profile_image","id","join"],"sources":["C:/Users/Sanity/Documents/GitHub/animalbrowsing/src/logic/apiTurnip.js"],"sourcesContent":["const contentAPI = (res) =>  {\r\n    let shortUrl = /https:\\/\\/t\\.co\\/+.{10}/g\r\n    let showResponse = res.map(tweet => {\r\n        if(tweet.text){\r\n            tweet.text = tweet.text.replace(\"'\\n' +\",  \"\")\r\n            tweet.date = new Date(tweet.date).toLocaleString('es-ES')\r\n            if(tweet.entities.media){ // has image\r\n                tweet.text = tweet.text.replace(tweet.entities.media[0].url, \"<img src='\" +tweet.entities.media[0].media_url+ \"' />\")\r\n            }\r\n            // urls[0] needed because API structure\r\n            if(tweet.entities.urls && tweet.entities.urls[0]){ // has other urls\r\n                let num_of_urls = tweet.entities.urls.length \r\n                let last_url = num_of_urls - 1\r\n                if(tweet.entities.urls[last_url].expanded_url.includes(\"/i/web/status\")){ // remove status url\r\n                    tweet.text = tweet.text.replace(tweet.entities.urls[last_url].url, \"\")\r\n                }\r\n                tweet.entities.urls.forEach((url)=>{ // clickable links\r\n                    tweet.text = tweet.text.replace(shortUrl, \"<br/><a href='\" +url.expanded_url+ \"' target='_blank' rel='noopener noreferrer' >\" +url.expanded_url.slice(0, 23)+ \"...</a><br/>\")\r\n                })\r\n            }\r\n        }\r\n\r\n        return   '<div class=\"tweet_individual\">'\r\n                    + '<a href=\"https://twitter.com/' +tweet.screen_name+ '\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"display:flex;align-items:center;\"><div style=\"padding-bottom:0\"><img style=\"width:35px;border-radius:20px;display:inline;margin: 0 auto;\" src=\"' +tweet.profile_image+ '\"/></div><span style=\"margin:10px;\">@' +tweet.screen_name+ '</span></a>'\r\n                    + '<p>' +tweet.text+ '</p>'\r\n                    + '<p class=\"tweet-date\"><a href=\"https://twitter.com/i/web/status/' +tweet.id+ '\" target=\"_blank\" rel=\"noopener noreferrer\">' +tweet.date+ '</a></p>' \r\n                    + '<p><a href=\"https://twitter.com/i/web/status/' +tweet.id+ '\" target=\"_blank\" rel=\"noopener noreferrer\">Ver más</a></p>'\r\n                    + '</div>'\r\n        }\r\n    ).join('')\r\n    return '<div class=\"blob_container\"><div class=\"blob red\"></div></div>'\r\n            + showResponse                \r\n}\r\n\r\nexport { contentAPI }"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,GAAG,IAAM;EACzB,IAAIC,QAAQ,GAAG,0BAA0B;EACzC,IAAIC,YAAY,GAAGF,GAAG,CAACG,GAAG,CAACC,KAAK,IAAI;IAChC,IAAGA,KAAK,CAACC,IAAI,EAAC;MACVD,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC,QAAQ,EAAG,EAAE,CAAC;MAC9CF,KAAK,CAACG,IAAI,GAAG,IAAIC,IAAI,CAACJ,KAAK,CAACG,IAAI,CAAC,CAACE,cAAc,CAAC,OAAO,CAAC;MACzD,IAAGL,KAAK,CAACM,QAAQ,CAACC,KAAK,EAAC;QAAE;QACtBP,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACC,IAAI,CAACC,OAAO,CAACF,KAAK,CAACM,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,EAAE,YAAY,GAAER,KAAK,CAACM,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACE,SAAS,GAAE,MAAM,CAAC;MACzH;MACA;MACA,IAAGT,KAAK,CAACM,QAAQ,CAACI,IAAI,IAAIV,KAAK,CAACM,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,EAAC;QAAE;QAC/C,IAAIC,WAAW,GAAGX,KAAK,CAACM,QAAQ,CAACI,IAAI,CAACE,MAAM;QAC5C,IAAIC,QAAQ,GAAGF,WAAW,GAAG,CAAC;QAC9B,IAAGX,KAAK,CAACM,QAAQ,CAACI,IAAI,CAACG,QAAQ,CAAC,CAACC,YAAY,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAC;UAAE;UACtEf,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACC,IAAI,CAACC,OAAO,CAACF,KAAK,CAACM,QAAQ,CAACI,IAAI,CAACG,QAAQ,CAAC,CAACL,GAAG,EAAE,EAAE,CAAC;QAC1E;QACAR,KAAK,CAACM,QAAQ,CAACI,IAAI,CAACM,OAAO,CAAER,GAAG,IAAG;UAAE;UACjCR,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACC,IAAI,CAACC,OAAO,CAACL,QAAQ,EAAE,gBAAgB,GAAEW,GAAG,CAACM,YAAY,GAAE,+CAA+C,GAAEN,GAAG,CAACM,YAAY,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAE,cAAc,CAAC;QACjL,CAAC,CAAC;MACN;IACJ;IAEA,OAAS,gCAAgC,GAC3B,+BAA+B,GAAEjB,KAAK,CAACkB,WAAW,GAAE,oMAAoM,GAAElB,KAAK,CAACmB,aAAa,GAAE,uCAAuC,GAAEnB,KAAK,CAACkB,WAAW,GAAE,aAAa,GACxV,KAAK,GAAElB,KAAK,CAACC,IAAI,GAAE,MAAM,GACzB,kEAAkE,GAAED,KAAK,CAACoB,EAAE,GAAE,8CAA8C,GAAEpB,KAAK,CAACG,IAAI,GAAE,UAAU,GACpJ,+CAA+C,GAAEH,KAAK,CAACoB,EAAE,GAAE,6DAA6D,GACxH,QAAQ;EACtB,CACJ,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACV,OAAO,gEAAgE,GAC7DvB,YAAY;AAC1B,CAAC;AAED,SAASH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}