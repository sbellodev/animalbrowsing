{"version":3,"sources":["content/Home.js","logic/apiTurnip.js","content/Turnip.js","images/buttons.js","logic/table.js","content/BugsTable.js","content/FishTable.js","content/SeaTable.js","logic/fossil.js","content/FossilTable.js","content/Description.js","content/Policy.js","content/Popup.js","content/Footer.js","content/Helmet.js","content/Shop.js","App.js","serviceWorker.js","index.js"],"names":["RenderArticle","articles","map","v","Article","dangerouslySetInnerHTML","__html","Titulo","hasVideo","url","videoUrl","HomeVideo","src","title","frameBorder","allow","allowFullScreen","Timeline","sourceType","screenName","borderColor","noHeader","noFooter","noScroolbar","transparent","placeholder","chrome","options","height","width","tweetLimit","Home","HomeContainer","DescContainer","Logo","alt","Ellipsis","SideBar","HomeContent","styled","main","header","div","aside","img","contentAPI","res","shortUrl","tweet","text","replace","entities","media","media_url","urls","last_url","length","expanded_url","includes","forEach","slice","screen_name","profile_image","id","join","Turnip","useState","APIResponse","setAPIResponse","message_wait","className","style","callServerAPI","fetch","then","json","catch","console","error","useEffect","intervalId","setInterval","clearInterval","TurnipContainer","BtnTweet","href","target","rel","data-show-count","data-size","TwitterContent","btnIMG","btnTable","imgEarth","Earth","EarthSPNG","EarthNPNG","EarthWEBPN","EarthNWEBPN","sortSearch","table","inputSearch","filter","toLowerCase","normalize","Name","PriceInt","toString","Season","Time","Location","Pattern","Size","sortSeason","clickCount","btn_season","document","getElementsByClassName","current_month","Date","getMonth","Temp","SeasonN","SeasonS","SeasonIntN","SeasonIntS","sortABC","sort","a","b","sortPrice","sortReset","Number","BugMobileTable","actualTable","value","key","type","srcSet","ImageWEBP","ImagePNG","Price","emptyRow","BugsTable","bugListES","tableContent","setTableContent","count","setCount","table_head","ButtonsContainer","htmlFor","SearchInput","onInput","e","BtnSortContainer","BtnSeason","onClick","IconImage","Button","backgroundColor","ResetButton","TableContainer","input","button","FishMobileTable","FishTable","fishListES","SeaMobileTable","currentTable","SeaTable","seaListES","BtnABC","BtnPrice","updateStorage","checkboxes","querySelectorAll","box","addEventListener","checked","localStorage","removeItem","setItem","totalStorage","FossilTableContent","First","name","Second","Third","Fourth","Fiveth","FossilTable","fossilListES","newTable","setNewTable","numFossils","setNumFossils","getItem","FossilContainer","Sixth","FillButton","Description","window","location","pathname","Container","Policy","PolicyContainer","PolicyContent","Popup","parentNode","display","acceptPolicy","Footer","FooterContainer","BackToTop","Disclaimer","footer","RHelmet","helmet","Helmet","lang","content","Shop","fontSize","products","prod","ind","Product","ReactGA","event","category","action","substring","log","ClickHandler","link","Title","price_str","Btn","figcaption","initialize","history","createBrowserHistory","listen","set","page","pageview","GlobalStyles","createGlobalStyle","NavbarContent","nav","BackgroundImage","AppContainer","App","section_names","to","exact","activeClassName","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9a66e5e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\nimport articles from '../data/articles.json'\r\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\r\n\r\nconst RenderArticle = ({articles}) => {\r\n    return articles.map(v => {\r\n        return (<Article>\r\n                    <br/><br/><br/>\r\n                    <div dangerouslySetInnerHTML={{ __html:v.Titulo}}></div>\r\n                    {(v.hasVideo && <HomeVideo url={v.videoUrl} />)}\r\n                    <br/><br/><br/>\r\n                </Article>)    \r\n    })\r\n}\r\nconst HomeVideo = ({url}) => \r\n    <iframe src={url} title=\"Animal Crossing Halloween\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n\r\n    const Timeline = () => {\r\n        return (\r\n            <TwitterTimelineEmbed\r\n                sourceType=\"profile\"\r\n                screenName=\"AC_canela\"\r\n                borderColor=\"#FFFFFF\"\r\n                noHeader\r\n                noFooter\r\n                noScroolbar\r\n                transparent\r\n                placeholder=\"Cargando contenido...\"\r\n                chrome=\"nofooter transparent noheader transparent\"\r\n                options={{height: 400, width: 600, tweetLimit: 3}}\r\n            />\r\n    )\r\n}\r\n\r\nconst Home = () => {\r\n    return (\r\n        <HomeContainer>\r\n            <DescContainer>\r\n                <Logo src=\"logo.png\" alt=\"Logo de la web una silla con forma de rana\" />\r\n                <h5>¡Bienvenid@ a Animal Browsing!</h5>\r\n                <h5>Encuentra nabos a buen precio, PIN DODOs y todo sobre bichos, peces, criaturas del mar, fósiles...</h5>\r\n                <h5>para Animal Crossing: New Horizons</h5>\r\n                <h5>¡Buena suerte! y cuídate</h5>\r\n                <Ellipsis />\r\n            </DescContainer>\r\n            <SideBar>\r\n                <p></p>\r\n            </SideBar>\r\n            <HomeContent>\r\n                <Timeline/>\r\n                <RenderArticle articles={articles}/>\r\n            </HomeContent>\r\n        </HomeContainer>\r\n    )\r\n}\r\n\r\nconst HomeContainer = styled.main`\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-template-rows: auto auto auto;\r\n    grid-template-areas: \r\n    \"a a\"\r\n    \"b c\"\r\n    \"b c\";\r\n    background-color: #CCE1F2;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    @media screen and (max-width: 900px){\r\n        grid-template-areas:\r\n        \"a a\"\r\n        \"b b\"\r\n        \"c c\";\r\n    }\r\n`\r\nconst DescContainer = styled.header`\r\n    grid-area: a;\r\n    background-color: #F5F2E3;\r\n    display: grid;\r\n    padding-top: 30px;\r\n    text-align: center;\r\n    max-height: 320px;\r\n    margin-bottom 70px;\r\n    h5 {\r\n        width: 70%;\r\n        margin: 0 auto;\r\n        font-size: 18px;\r\n    }\r\n    @media screen and (max-width: 570px){\r\n        h5 {\r\n            font-size: 16px;\r\n        }\r\n    }\r\n    @media screen and (max-width: 420px){\r\n        h5 {\r\n            width: 80%;\r\n        }\r\n    }\r\n`\r\nconst Ellipsis = styled.div`\r\n    width: 100%;\r\n    height: 20px;\r\n    margin-top: 30px;\r\n    border-top-left-radius: 100%;\r\n    border-top-right-radius: 100%;\r\n    background-color: #CCE1F2;\r\n`\r\nconst HomeContent = styled.div`\r\n    grid-area: b;\r\n    display: grid;\r\n    justify-items: center;\r\n    border-right: 1px solid white;\r\n\r\n    span {\r\n        color: green;\r\n    }\r\n    iframe {\r\n        display: block;\r\n        margin: 0 auto;\r\n        margin-top: 30px;\r\n        width: 480px;\r\n        height: 360px;\r\n        border-radius: 18px;\r\n        @media screen and (max-width: 570px){\r\n            width: 360px;\r\n            height: 280px;\r\n        }\r\n        @media screen and (max-width: 420px){\r\n            width: 280px;\r\n            height: 200px;\r\n        }\r\n    }\r\n    @media screen and (max-width: 340px){\r\n        width: 85%;\r\n    }\r\n`\r\nconst Article = styled.div`\r\n    border-bottom: 1px solid ghostwhite;\r\n`\r\nconst SideBar = styled.aside`\r\n    grid-area c;\r\n    margin: 0 auto;\r\n`\r\nconst Logo = styled.img`\r\n    width: 170px;\r\n    display: block;\r\n    margin: 0 auto;\r\n    padding-bottom: 10px;\r\n    @media screen and (max-width: 570px){\r\n        width: 140px;\r\n    }\r\n`\r\nexport { Home }","const contentAPI = (res) =>  {\r\n    let shortUrl = /https:\\/\\/t\\.co\\/+.{10}/g\r\n    let showResponse = res.map(tweet => {\r\n        if(tweet.text){\r\n            tweet.text = tweet.text.replace(\"'\\n' +\",  \"\")\r\n            if(tweet.entities.media){ // has image\r\n                tweet.text = tweet.text.replace(tweet.entities.media[0].url, \"<img src='\" +tweet.entities.media[0].media_url+ \"' />\")\r\n            }\r\n            // urls[0] needed because API structure\r\n            if(tweet.entities.urls && tweet.entities.urls[0]){ // has other urls\r\n                let num_of_urls = tweet.entities.urls.length \r\n                let last_url = num_of_urls - 1\r\n                if(tweet.entities.urls[last_url].expanded_url.includes(\"/i/web/status\")){ // remove status url\r\n                    tweet.text = tweet.text.replace(tweet.entities.urls[last_url].url, \"\")\r\n                }\r\n                tweet.entities.urls.forEach((url)=>{ // clickable links\r\n                    tweet.text = tweet.text.replace(shortUrl, \"<br/><a href='\" +url.expanded_url+ \"' target='_blank' rel='noopener noreferrer' >\" +url.expanded_url.slice(0, 23)+ \"...</a><br/>\")\r\n                })\r\n            }\r\n        }\r\n\r\n        return   '<div class=\"tweet_individual\">'\r\n                    + '<a href=\"https://twitter.com/' +tweet.screen_name+ '\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"display:flex;align-items:center;\"><div style=\"padding-bottom:0\"><img style=\"width:35px;border-radius:20px;display:inline;margin: 0 auto;\" src=\"' +tweet.profile_image+ '\"/></div><span style=\"margin:10px;\">@' +tweet.screen_name+ '</span></a>'\r\n                    + '<p>' +tweet.text+ '</p>'\r\n                    + '<p><a href=\"https://twitter.com/i/web/status/' +tweet.id+ '\" target=\"_blank\" rel=\"noopener noreferrer\">Ver más</a></p>'\r\n                    + '</div>'\r\n        }\r\n    ).join('')\r\n    return '<div class=\"blob_container\"><div class=\"blob red\"></div></div>'\r\n            + showResponse                \r\n}\r\n\r\nexport { contentAPI }","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components'\r\nimport { contentAPI } from '../logic/apiTurnip.js'\r\n\r\nconst Turnip = () => {\r\n    const [APIResponse, setAPIResponse] = useState(\"\")\r\n    let message_wait = <p className=\"tweet_individual\" style={{height: \"99vh\"}}>Cargando tweets... si tarda mucho, por favor contacta con el webmaster.</p>\r\n    \r\n    const callServerAPI = () => {\r\n        const URL = 'https://animalbrowsing.com/paco'\r\n        fetch(URL)\r\n            .then(res => res.json())\r\n            .then(json => setAPIResponse(json))\r\n            .catch(() => {\r\n                console.error('API fetching error.');\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        callServerAPI()\r\n        const intervalId = setInterval(callServerAPI, 40000)\r\n        return () => clearInterval(intervalId)\r\n    },[]) \r\n    \r\n    return (\r\n        <>\r\n        <TurnipContainer>\r\n            <BtnTweet>\r\n                <a href=\"https://twitter.com/intent/tweet?hashtags=AnimalCrossing,Turnip\" target=\"_blank\" rel=\"noopener noreferrer\" data-show-count=\"false\" data-size=\"large\">\r\n                    Twittear\r\n                </a>\r\n            </BtnTweet>\r\n            {!APIResponse && <TwitterContent>{message_wait}</TwitterContent>}\r\n            {APIResponse && <TwitterContent dangerouslySetInnerHTML={{__html: contentAPI(APIResponse)}} />}\r\n        </TurnipContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nconst BtnTweet = styled.div`\r\n    display: block;\r\n    max-width: 420px;\r\n    margin: 0 auto;\r\n    font-size: 14px;\r\n    font-weight: bold;\r\n    text-align: right;\r\n    a {\r\n        border-radius: 24px;\r\n        border-width: 0px;\r\n        background: #1DA1F2;\r\n        padding: 12px 14px;\r\n        color: white;\r\n        font-weight: bold;\r\n        font-family: Arial;\r\n        text-decoration: none;\r\n        img {\r\n            padding: 0 5px;\r\n            vertical-align: middle;\r\n        }\r\n    }\r\n`\r\nconst TurnipContainer = styled.main`\r\n    background-color: #CCE1F2;\r\n    width: 100%;\r\n    text-align: left;\r\n    white-space: pre-wrap;\r\n    font-size: 18px;\r\n    line-height: 25px;\r\n    @media screen and (max-width: 570px){\r\n        font-size: 16px;\r\n    }\r\n`\r\nconst TwitterContent = styled.div`\r\n\r\n    a, a:visited {\r\n        color: blue;\r\n    }\r\n    img {\r\n        display: block;\r\n        margin: 18px auto;\r\n        width: 100%;\r\n        max-height: 230px;\r\n        border-radius: 12px;\r\n    }\r\n    .tweet_individual {\r\n        width: 80%;\r\n        max-width: 350px;\r\n        margin: 0 auto;\r\n        padding: 30px;\r\n        border: 2px solid ghostwhite;\r\n        border-radius: 10px;\r\n        margin-top: 20px;\r\n        box-shadow: 3px 4px ghostwhite;\r\n        word-break: break-word;\r\n\r\n        p, div, a {\r\n            padding-bottom: 10px;\r\n        }\r\n    }\r\n    \r\n    .blob_container {\r\n        display: table;\r\n        margin: 0 auto;\r\n    }\r\n    .blob {\r\n        background: black;\r\n        border-radius: 50%;\r\n        box-shadow: 0 0 0 0 rgba(0, 0, 0, 1);\r\n        margin: 10px;\r\n        height: 20px;\r\n        width: 20px;\r\n        transform: scale(1);\r\n        animation: pulse-black 2s infinite;\r\n    }\r\n\r\n    .blob.red {\r\n        background: rgba(255, 82, 82, 1);\r\n        box-shadow: 0 0 0 0 rgba(255, 82, 82, 1);\r\n        animation: pulse-red 2s infinite;\r\n    }\r\n\r\n    @keyframes pulse-red {\r\n        0% {\r\n            transform: scale(0.95);\r\n            box-shadow: 0 0 0 0 rgba(255, 82, 82, 0.7);\r\n        }\r\n        \r\n        70% {\r\n            transform: scale(1);\r\n            box-shadow: 0 0 0 10px rgba(255, 82, 82, 0);\r\n        }\r\n        \r\n        100% {\r\n            transform: scale(0.95);\r\n            box-shadow: 0 0 0 0 rgba(255, 82, 82, 0);\r\n        }\r\n    }\r\n`\r\n\r\nexport { Turnip }","const btnIMG = {\r\n    ResetPNG: \"/icons/reset.png\",\r\n    ResetWEBP: \"/icons/reset.webp\",\r\n    FillPNG: \"/icons/check.png\", \r\n    FillJPG: \"/icons/check.jpg\"\r\n}\r\nconst btnTable = {\r\n    Price: \"/icons/star.svg\",\r\n    ABCPNG: \"/icons/abc.png\",\r\n    ABCWEBP: \"/icons/abc.webp\",\r\n    ResetPNG: \"/icons/reset.png\",\r\n    ResetWEBP: \"/icons/reset.webp\",\r\n}\r\nconst imgEarth = {\r\n    Earth: \"/icons/earth.svg\", \r\n    EarthSPNG: \"/icons/earthS.png\",\r\n    EarthNPNG: \"/icons/earthN.png\", \r\n    EarthWEBPN: \"/icons/earthS.WEBPN\",\r\n    EarthNWEBPN: \"/icons/earthN.WEBPN\" \r\n}\r\nexport { btnIMG, btnTable, imgEarth}","const sortSearch = (table, inputSearch) => {\r\n    return table.filter((v) => {\r\n        inputSearch = inputSearch.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\")\r\n        return (\r\n            v.Name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) ||\r\n            v.PriceInt.toString().includes(inputSearch) ||\r\n            v.Season.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) ||\r\n            v.Time.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) ||\r\n            (v.Location && v.Location.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch)) ||\r\n            (v.Pattern && v.Pattern.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch)) ||\r\n            (v.Size && v.Size.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch)) \r\n            )\r\n        })\r\n}\r\nconst sortSeason = (table, imgEarth, clickCount) => {\r\n    let btn_season = document.getElementsByClassName(\"btn-season\")[0]\r\n    switch(clickCount) {\r\n        case 1:\r\n            btn_season.src = imgEarth.EarthNPNG\r\n            break;\r\n        case 2:\r\n            btn_season.src = imgEarth.EarthSPNG\r\n            break;\r\n        case 0:\r\n        default:\r\n            btn_season.src = imgEarth.Earth                \r\n            break;\r\n    }\r\n\r\n    var time = new Date();\r\n    let current_month = time.getMonth() + 1\r\n\r\n    return table.filter((v) => {\r\n        v.Temp = clickCount === 1 ? v.SeasonN : clickCount === 2 ? v.SeasonS : \"\"  \r\n        let Season\r\n        switch(clickCount){\r\n            case 1:\r\n                Season = v.SeasonIntN\r\n                break\r\n            case 2:\r\n                Season = v.SeasonIntS\r\n                break\r\n            default:\r\n                return v\r\n        }\r\n\r\n        if(Season.length === 1 && current_month === Season[0]) { // ex: Firefly\r\n                return true\r\n        }\r\n        else if(Season.length === 2) { // ex: Mar-Apr (3, 4)\r\n            if(Season[0] < Season[1]) {\r\n                if(current_month >=  Season[0] && current_month <=  Season[1]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[0] > Season[1]) {\r\n                if(current_month >=  Season[0] || current_month <=  Season[1]) {\r\n                    return true\r\n                } \r\n            }\r\n        }\r\n        else if(Season.length === 3) { // ex: Mar-Apr, Jun (3, 4, 6) \r\n            if(current_month === Season[2]) {\r\n                return true\r\n            }\r\n            if(Season[0] < Season[1]) {\r\n                if(current_month >=  Season[0] && current_month <=  Season[1]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[0] > Season[1]) {\r\n                if(current_month >=  Season[0] || current_month <=  Season[1]) {\r\n                    return true\r\n                } \r\n            }\r\n        }\r\n        else if(Season.length === 4) { // ex: Mar-Apr, Jun-Jul (3, 4, 6, 7) \r\n            if(Season[0] < Season[1]) {\r\n                if(current_month >=  Season[0] && current_month <=  Season[1]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[2] < Season[3]) {\r\n                if(current_month >=  Season[2] && current_month <=  Season[3]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[0] > Season[1]) {\r\n                if(current_month >=  Season[0] || current_month <=  Season[1]) {\r\n                    return true\r\n                }\r\n            }\r\n            else if(Season[2] > Season[3]) {\r\n                if(current_month >=  Season[2] || current_month <=  Season[3]) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n\r\n        return false\r\n    })\r\n}\r\nconst sortABC = (table) => { \r\n    return [...table].sort((a, b) => \r\n        a.Name > b.Name ? 1 :\r\n        a.Name < b.Name ? -1 : 0)\r\n}\r\nconst sortPrice = (table) => { \r\n    return [...table].sort((a, b) => b.PriceInt - a.PriceInt)\r\n}\r\nconst sortReset = (table) => { \r\n    return [...table].sort((a, b) => a.Number - b.Number)\r\n}\r\n\r\nexport { sortSearch, sortSeason, sortABC, sortPrice, sortReset }","import React, { useState } from 'react';\r\nimport styled from 'styled-components'\r\n//import bugListEN from '../data/bug-EN.json'\r\nimport bugListES from '../data/bug-ES.json'\r\nimport { btnTable, imgEarth } from '../images/buttons.js'\r\nimport { sortSearch, sortSeason, sortABC, sortPrice, sortReset } from '../logic/table.js'\r\n\r\nconst BugMobileTable = ({actualTable}) => {\r\n    const row = actualTable.length ? actualTable.map(value =>\r\n         <tr key={value.Number}>\r\n            <td>\r\n                <picture>\r\n                    <source type=\"image/webp\" srcSet={\"../img/bug/\" +value.ImageWEBP} />\r\n                    <img src={\"../img/bug/\" +value.ImagePNG} alt={value.Name} />\r\n                </picture>\r\n            </td>\r\n            <td>{value.Name} <br/> {value.Price}</td>\r\n            <td dangerouslySetInnerHTML={{ __html: value.Time + \"<br/>\" + value.Location}}></td>\r\n            <td dangerouslySetInnerHTML={{ __html: value.Temp ? value.Temp : value.Season}}></td>\r\n         </tr>\r\n     ) : emptyRow\r\n     return row\r\n}\r\nconst emptyRow = <tr>\r\n                    <td></td>\r\n                    <td>No hay nada uwu...</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n    \r\nconst BugsTable = () => {\r\n    const [tableContent, setTableContent] = useState(bugListES)\r\n    const [count, setCount] = useState(1)\r\n    let table_head = [\"Imagen\", \"Nombre\", \"Precio\", \"Hora\", \"Ubicación\", \"Temporada\", \"(Hemis.)\"]\r\n\r\n    return (    \r\n      <main>\r\n        <ButtonsContainer>\r\n            <div>\r\n                <label htmlFor={\"table-search\"}></label>\r\n                <SearchInput  id={\"table-search\"} onInput={(e) => setTableContent(sortSearch(bugListES, e.target.value))} placeholder={\"Búscame...\"} />\r\n            </div>\r\n            <BtnSortContainer>\r\n                <BtnSeason onClick={() => {\r\n                    count === 2 ? setCount(0) : setCount(count + 1) \r\n                    setTableContent(sortSeason(bugListES, imgEarth, count))}}  alt=\"Actual Season\">\r\n                        <IconImage className={\"btn-season\"} src={imgEarth.Earth} alt=\"Hemisphere\" />\r\n                </BtnSeason>\r\n                <Button onClick={() => setTableContent(sortABC(bugListES))}>\r\n                    <picture>\r\n                        <source type=\"image/webp\" srcSet={btnTable.ABCWEBP} />\r\n                        <IconImage src={btnTable.ABCPNG} alt=\"ABC\" />\r\n                    </picture>\r\n                </Button>\r\n                <Button onClick={() => setTableContent(sortPrice(bugListES))} style={{backgroundColor: \"#FDDD5C\"}}>\r\n                    <picture>\r\n                        <IconImage src={btnTable.Price}  alt=\"Price\" />\r\n                    </picture>\r\n                </Button>\r\n                <ResetButton onClick={() => setTableContent(sortReset(bugListES))}>\r\n                    <picture>\r\n                        <source type=\"image/webp\" srcSet={btnTable.ResetWEBP}/>\r\n                        <IconImage src={btnTable.ResetPNG}  alt=\"Reset\" />\r\n                    </picture>\r\n                </ResetButton>\r\n            </BtnSortContainer>\r\n        </ButtonsContainer>\r\n        <div>\r\n            <TableContainer>\r\n                <thead>\r\n                    <tr>\r\n                        <th>{table_head[0]}</th>\r\n                        <th>{table_head[1]}<br/>{table_head[2]}</th>\r\n                        <th>{table_head[3]}<br/>{table_head[4]}</th>\r\n                        <th>{table_head[5]}<br/>{table_head[6]}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <BugMobileTable actualTable={ tableContent }/>\r\n                </tbody>\r\n            </TableContainer>\r\n        </div>\r\n      </main>\r\n    )\r\n}\r\n\r\nconst TableContainer = styled.table`\r\n    font-size: 18px;\r\n    width: 100%;\r\n    background-color: #CCE1F2;\r\n    border-collapse: collapse;\r\n    padding: 5px;\r\n\r\n    tbody {\r\n        font-family: arial;\r\n        font-weight: normal;\r\n    }\r\n    tr {\r\n        border-bottom: 3px solid ghostwhite;\r\n        border-radius: 50%;\r\n    }\r\n    th {\r\n        padding-top: 20px;\r\n        padding-bottom: 20px;\r\n        width: 25%;\r\n        background-color: #CCE1F2;\r\n        border-top: 3px solid #F5F2E3;\r\n        text-align: center;\r\n        vertical-align: top;\r\n    }\r\n    td {\r\n        text-align: center;\r\n        padding-bottom: 20px;\r\n        padding-top: 20px;        \r\n        vertical-align: top;\r\n    }\r\n    td:last-child {\r\n        text-align: left;\r\n    }\r\n    img {\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n\r\n    @media screen and (max-width: 570px) {\r\n        font-size: 16px;\r\n    }\r\n    @media screen and (max-width: 340px) {\r\n        font-size: 14px;\r\n    }\r\n`\r\n\r\nconst ButtonsContainer = styled.div`\r\n    background-color: #CCE1F2;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-top: 30px;\r\n    padding-bottom: 20px;\r\n    padding-left: 10px;\r\n\r\n    button {\r\n        background-color: ghostwhite;\r\n    }\r\n    button:active {\r\n        transform: translateY(4px);\r\n    }\r\n`\r\nconst BtnSortContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst SearchInput = styled.input`\r\n  font-size: 12px;\r\n  width: 70px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n  margin-left: 10px;\r\n  padding-left: 20px;\r\n  border-radius: 5px;\r\n  border: 1px solid white;\r\n  box-shadow: 1px 1px black;\r\n\r\n  img {\r\n    float: right;\r\n  }\r\n\r\n  @media screen and (max-width: 340px) {\r\n    height: 35px;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 1px #888888;\r\n  margin-right: 20px;\r\n  padding: 5px;\r\n  @media screen and (max-width: 380px) {\r\n    margin-right: 10px;\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n`\r\nconst BtnSeason = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 1px #888888;\r\n  margin-right: 20px;\r\n  padding: 1px;\r\n  @media screen and (max-width: 380px) {\r\n    margin-right: 10px;\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n`\r\nconst ResetButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 10px 25px 10px 0;\r\n  border-radius: 50%;\r\n  box-shadow: 1px 1px #888888;\r\n`\r\nconst IconImage = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: block;\r\n`\r\n\r\nexport { BugsTable }\r\n","import React, { useState } from 'react';\r\n//import fishListEN from '../data/fish-EN.json'\r\nimport fishListES from '../data/fish-ES.json'\r\nimport styled from 'styled-components'\r\nimport { sortSearch, sortSeason, sortABC, sortPrice, sortReset } from '../logic/table.js'\r\nimport { btnTable, imgEarth } from '../images/buttons.js'\r\n\r\nconst FishMobileTable = ({actualTable}) => {\r\n    const row = actualTable.length ? actualTable.map(value =>\r\n         <tr key={value.Number}>\r\n            <td>\r\n                <picture>\r\n                    <source type=\"image/webp\" srcSet={\"../img/fish/\" +value.ImageWEBP} />\r\n                    <img src={\"../img/fish/\" +value.ImagePNG} alt={value.Name} />\r\n                </picture>\r\n            </td>\r\n            <td>{value.Name} <br/> {value.Price}</td>\r\n            <td dangerouslySetInnerHTML={{ __html: value.Time + \"<br/>\" + value.Location + \"<br/>\" + value.Size}}></td>\r\n            <td dangerouslySetInnerHTML={{ __html: value.Temp ? value.Temp : value.Season}}></td>\r\n         </tr>\r\n     ) : emptyRow\r\n     return row\r\n}\r\nconst emptyRow = <tr>\r\n                    <td></td>\r\n                    <td>No hay nada uwu...</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n    \r\nconst FishTable = () => {\r\n    const [tableContent, setTableContent] = useState(fishListES)\r\n    const [count, setCount] = useState(1)\r\n    let table_head = [\"Imagen\", \"Nombre\", \"Precio\", \"Hora\", \"Ubicación\", \"Temporada\", \"(Hemis.)\", \"Tamaño\"]\r\n    \r\n    return (    \r\n      <main>\r\n        <ButtonsContainer>\r\n            <div>\r\n                <label htmlFor={\"table-search\"}></label>\r\n                <SearchInput  id={\"table-search\"} onInput={(e) => setTableContent(sortSearch(fishListES, e.target.value))} placeholder={\"Búscame...\"} />\r\n            </div>\r\n            <BtnSortContainer>\r\n                <BtnSeason onClick={() => {\r\n                    count === 2 ? setCount(0) : setCount(count + 1) \r\n                    setTableContent(sortSeason(fishListES, imgEarth, count))}}  alt=\"Actual Season\">\r\n                        <IconImage className={\"btn-season\"} src={imgEarth.Earth} alt=\"Hemisphere\" />\r\n                </BtnSeason>\r\n                <Button onClick={() => setTableContent(sortABC(fishListES))}>\r\n                    <picture>\r\n                        <source type=\"image/webp\" srcSet={btnTable.ABCWEBP}/>\r\n                        <IconImage src={btnTable.ABCPNG} alt=\"ABC\" />\r\n                    </picture>\r\n                </Button>\r\n                <Button onClick={() => setTableContent(sortPrice(fishListES))} style={{backgroundColor: \"#FDDD5C\"}}>\r\n                    <picture>\r\n                        <IconImage src={btnTable.Price}  alt=\"Price\" />\r\n                    </picture>\r\n                </Button>\r\n                <ResetButton onClick={() => setTableContent(sortReset(fishListES))}>\r\n                    <picture>\r\n                        <source type=\"image/webp\" srcSet={btnTable.ResetWEBP}/>\r\n                        <IconImage src={btnTable.ResetPNG}  alt=\"Reset\" />\r\n                    </picture>\r\n                </ResetButton>\r\n            </BtnSortContainer>\r\n        </ButtonsContainer>\r\n        <div>\r\n            <TableContainer>\r\n                <thead>\r\n                    <tr>\r\n                        <th>{table_head[0]}</th>\r\n                        <th>{table_head[1]}<br/>{table_head[2]}</th>\r\n                        <th>{table_head[3]}<br/>{table_head[4]}<br/>{table_head[7]}</th>\r\n                        <th>{table_head[5]}<br/>{table_head[6]}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <FishMobileTable actualTable={ tableContent }/>\r\n                </tbody>\r\n            </TableContainer>\r\n        </div>\r\n      </main>\r\n    )\r\n}\r\n\r\nconst TableContainer = styled.table`\r\n    font-size: 18px;\r\n    width: 100%;\r\n    background-color: #CCE1F2;\r\n    border-collapse: collapse;\r\n    padding: 5px;\r\n\r\n    tbody {\r\n        font-family: arial;\r\n        font-weight: normal;\r\n    }\r\n    tr {\r\n        border-bottom: 3px solid ghostwhite;\r\n        border-radius: 50%;\r\n    }\r\n    th {\r\n        padding-top: 20px;\r\n        padding-bottom: 20px;\r\n        width: 25%;\r\n        background-color: #CCE1F2;\r\n        border-top: 3px solid #F5F2E3;\r\n        text-align: center;\r\n        vertical-align: top;\r\n    }\r\n    td {\r\n        text-align: center;\r\n        padding-bottom: 20px;\r\n        padding-top: 20px;        \r\n        vertical-align: top;\r\n    }\r\n    td:last-child {\r\n        text-align: left;\r\n    }\r\n    img {\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n\r\n    @media screen and (max-width: 570px) {\r\n        font-size: 16px;\r\n    }\r\n    @media screen and (max-width: 340px) {\r\n        font-size: 14px;\r\n    }\r\n`\r\n\r\nconst ButtonsContainer = styled.div`\r\n    background-color: #CCE1F2;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-top: 30px;\r\n    padding-bottom: 20px;\r\n    padding-left: 10px;\r\n\r\n    button {\r\n        background-color: ghostwhite;\r\n    }\r\n    button:active {\r\n        transform: translateY(4px);\r\n    }\r\n`\r\nconst BtnSortContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst SearchInput = styled.input`\r\n  font-size: 12px;\r\n  width: 70px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n  margin-left: 10px;\r\n  padding-left: 20px;\r\n  border-radius: 5px;\r\n  border: 1px solid white;\r\n  box-shadow: 1px 1px black;\r\n\r\n  img {\r\n    float: right;\r\n  }\r\n\r\n  @media screen and (max-width: 340px) {\r\n    height: 35px;\r\n  }\r\n`\r\nconst Button = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 1px #888888;\r\n  margin-right: 20px;\r\n  padding: 5px;\r\n  @media screen and (max-width: 380px) {\r\n    margin-right: 10px;\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n`\r\nconst BtnSeason = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 1px #888888;\r\n  margin-right: 20px;\r\n  padding: 1px;\r\n  @media screen and (max-width: 380px) {\r\n    margin-right: 10px;\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n`\r\nconst ResetButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 10px 25px 10px 0;\r\n  border-radius: 50%;\r\n  box-shadow: 1px 1px #888888;\r\n`\r\nconst IconImage = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: block;\r\n`\r\n\r\nexport { FishTable }\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport seaListES from '../data/sea-ES.json'\r\nimport { btnTable, imgEarth } from '../images/buttons.js'\r\nimport { sortSearch, sortSeason, sortABC, sortPrice, sortReset } from '../logic/table.js'\r\n\r\nconst SeaMobileTable = ({currentTable}) => {\r\n    const row = currentTable.length ? currentTable.map(value =>\r\n         <tr key={value.Number}>\r\n            <td>\r\n                <picture>\r\n                    <source type=\"image/webp\" srcSet={\"../img/sea/\" +value.ImageWEBP} />\r\n                    <img src={\"../img/sea/\" +value.ImagePNG} alt={value.Name} />\r\n                </picture>\r\n            </td>\r\n            <td>{value.Name} <br/> {value.Price}</td>\r\n            <td dangerouslySetInnerHTML={{ __html: value.Time + \"<br/>\" + value.Pattern + \"<br/>\" + value.Size}}></td>\r\n            <td dangerouslySetInnerHTML={{ __html: value.Temp ? value.Temp : value.Season}}></td>\r\n         </tr>\r\n     ) : emptyRow\r\n     return row\r\n}\r\nconst emptyRow = <tr>\r\n                    <td></td>\r\n                    <td>No hay nada uwu...</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n    \r\nconst SeaTable = () => {\r\n    const [tableContent, setTableContent] = useState(seaListES)\r\n    const [count, setCount] = useState(1)\r\n    let table_head = [\"Imagen\", \"Nombre\", \"Precio\", \"Hora\", \"Movimiento\", \"Temporada\", \"(Disponible)\", \"Tamaño\"]\r\n\r\n    return (    \r\n      <>\r\n        <ButtonsContainer>\r\n            <div>\r\n                <label htmlFor={\"table-search\"}></label>\r\n                <SearchInput id={\"table-search\"} onInput={(e) => setTableContent(sortSearch(seaListES, e.target.value))} placeholder={\"Búscame...\"} />\r\n            </div>\r\n                <BtnSortContainer>\r\n                <BtnSeason onClick={() => {\r\n                    count === 2 ? setCount(0) : setCount(count + 1) \r\n                    setTableContent(sortSeason(seaListES, imgEarth, count))}}  alt=\"Actual Season\">\r\n                    <IconImage className={\"btn-season\"} src={imgEarth.Earth} alt=\"current_emisphere\" />\r\n                </BtnSeason>\r\n                <BtnABC onClick={() => setTableContent(sortABC(seaListES))}>\r\n                    <picture>\r\n                        <source type=\"image/webp\" srcSet={btnTable.ABCWEBP}/>\r\n                        <IconImage src={btnTable.ABCPNG} alt=\"ABC\" />\r\n                    </picture>\r\n                </BtnABC>\r\n                <BtnPrice onClick={() => setTableContent(sortPrice(seaListES))} style={{backgroundColor: \"#FDDD5C\"}}>\r\n                    <picture>\r\n                        <IconImage src={btnTable.Price}  alt=\"Price\" />\r\n                    </picture>\r\n                </BtnPrice>\r\n                <ResetButton onClick={() => setTableContent(sortReset(seaListES))}>\r\n                    <picture>\r\n                        <source type=\"image/webp\" srcSet={btnTable.ResetWEBP}/>\r\n                        <IconImage src={btnTable.ResetPNG}  alt=\"Reset\" />\r\n                    </picture>\r\n                </ResetButton>\r\n            </BtnSortContainer>\r\n        </ButtonsContainer>\r\n        <main>\r\n            <TableContainer>\r\n                <thead>\r\n                    <tr>\r\n                        <th>{table_head[0]}</th>\r\n                        <th>{table_head[1]}<br/>{table_head[2]}</th>\r\n                        <th>{table_head[3]}<br/>{table_head[4]}<br/>{table_head[7]}</th>\r\n                        <th>{table_head[5]}<br/>{table_head[6]}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <SeaMobileTable currentTable={ tableContent } />\r\n                </tbody>\r\n            </TableContainer>\r\n        </main>\r\n      </>\r\n    )\r\n}\r\n\r\nconst TableContainer = styled.table`\r\n    font-size: 18px;\r\n    width: 100%;\r\n    background-color: #CCE1F2;\r\n    border-collapse: collapse;\r\n    padding: 5px;\r\n\r\n    tbody {\r\n        font-family: arial;\r\n        font-weight: normal;\r\n    }\r\n    tr {\r\n        border-bottom: 3px solid ghostwhite;\r\n        border-radius: 50%;\r\n    }\r\n    th {\r\n        padding-top: 20px;\r\n        padding-bottom: 20px;\r\n        width: 25%;\r\n        background-color: #CCE1F2;\r\n        border-top: 3px solid #F5F2E3;\r\n        text-align: center;\r\n        vertical-align: top;\r\n    }\r\n    td {\r\n        text-align: center;\r\n        padding-bottom: 20px;\r\n        padding-top: 20px;        \r\n        vertical-align: top;\r\n    }\r\n    td:last-child {\r\n        text-align: left;\r\n    }\r\n    img {\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n\r\n    @media screen and (max-width: 570px) {\r\n        font-size: 16px;\r\n    }\r\n    @media screen and (max-width: 340px) {\r\n        font-size: 14px;\r\n    }\r\n`\r\n\r\nconst ButtonsContainer = styled.div`\r\n    background-color: #CCE1F2;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-top: 30px;\r\n    padding-bottom: 20px;\r\n    padding-left: 10px;\r\n\r\n    button {\r\n        background-color: ghostwhite;\r\n    }\r\n    button:active {\r\n        transform: translateY(4px);\r\n    }\r\n`\r\nconst BtnSortContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\nconst SearchInput = styled.input`\r\n  font-size: 12px;\r\n  width: 70px;\r\n  height: 35px;\r\n  margin-right: 10px;\r\n  margin-left: 10px;\r\n  padding-left: 20px;\r\n  border-radius: 5px;\r\n  border: 1px solid white;\r\n  box-shadow: 1px 1px black;\r\n\r\n  img {\r\n    float: right;\r\n  }\r\n\r\n  @media screen and (max-width: 340px) {\r\n    height: 35px;\r\n  }\r\n`\r\nconst BtnSeason = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 1px #888888;\r\n  margin-right: 20px;\r\n  padding: 1px;\r\n  @media screen and (max-width: 380px) {\r\n    margin-right: 10px;\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n`\r\nconst BtnABC = styled.button`\r\nwidth: 40px;\r\nheight: 40px;\r\nborder-radius: 10px;\r\nbox-shadow: 1px 1px #888888;\r\nmargin-right: 20px;\r\npadding: 5px;\r\n@media screen and (max-width: 380px) {\r\n    margin-right: 10px;\r\n    width: 35px;\r\n    height: 35px;\r\n}\r\n`\r\nconst BtnPrice = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 10px;\r\n  box-shadow: 1px 1px #888888;\r\n  margin-right: 20px;\r\n  padding: 5px;\r\n  @media screen and (max-width: 380px) {\r\n    margin-right: 10px;\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n`\r\nconst ResetButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 10px 25px 10px 0;\r\n  border-radius: 50%;\r\n  box-shadow: 1px 1px #888888;\r\n`\r\nconst IconImage = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: block;\r\n`\r\n\r\nexport { SeaTable }\r\n","const showCheckedboxes = () => {\r\n    let checkboxes = document.querySelectorAll(\"input[name='checks']\")\r\n    checkboxes.forEach(box => {\r\n        if(box !== \"search-fossil\" && localStorage.getItem(box.id)){\r\n            box.checked = true\r\n        }\r\n    })\r\n}\r\nconst updateStorage = () => {\r\n    let checkboxes = document.querySelectorAll(\"input[name='checks']\")\r\n    const totalStorage = (box) => {\r\n        if(box.checked === false) {\r\n            localStorage.removeItem(box.id)\r\n        } else if (box.checked === true) {\r\n            localStorage.setItem(box.id, \"checked\")\r\n        }\r\n    }\r\n    checkboxes.forEach(box => box.addEventListener(\"change\", totalStorage(box)))\r\n    return localStorage.length\r\n}\r\nconst sortBySearch = (table, inputSearch) => {\r\n    return table.filter((v) => {\r\n        inputSearch = inputSearch.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\")\r\n        return (\r\n            v.Name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) ||\r\n            (v.First && v.First.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) )||\r\n            (v.Second && v.Second.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) )||\r\n            (v.Third && v.Third.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) )||\r\n            (v.Fourth && v.Fourth.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) )||\r\n            (v.Fiveth && v.Fiveth.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch) )||\r\n            (v.Sixth && v.Sixth.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").includes(inputSearch)) \r\n            )\r\n        })\r\n}\r\nconst clearCheckboxes = () => {\r\n    let checkboxes = document.querySelectorAll(\"input[name='checks']\")\r\n    checkboxes.forEach(box => {\r\n        box.checked = false\r\n        localStorage.removeItem(box.id)\r\n    })\r\n}\r\nconst fillCheckboxes = () => {\r\n    let checkboxes = document.querySelectorAll(\"input[name='checks']\")\r\n    checkboxes.forEach(box => {\r\n        box.checked = true\r\n        localStorage.setItem(box.id, \"checked\")\r\n    })\r\n}\r\n\r\nexport { showCheckedboxes, updateStorage, sortBySearch, clearCheckboxes, fillCheckboxes }","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components'\r\n//import fossilListEN from '../data/fossil-EN.json'\r\nimport fossilListES from '../data/fossil-ES.json'\r\nimport { showCheckedboxes, updateStorage, sortBySearch, clearCheckboxes, fillCheckboxes } from '../logic/fossil.js'\r\nimport { btnIMG } from '../images/buttons.js'\r\n\r\n\r\nconst FossilTableContent = ({actualTable}) => {\r\n    const row = actualTable.length ? actualTable.map(value =>\r\n            <ul key={value.Number}>\r\n                {!value.First && <p><input name=\"checks\" id={value.Name} type=\"checkbox\" /><label htmlFor={value.Name}>{value.Name}</label></p>}\r\n                {value.First && <p>{value.Name}</p>}\r\n                {value.First && <li><input name=\"checks\" id={value.First} type=\"checkbox\" /><label htmlFor={value.First}>{value.First}</label></li>}\r\n                {value.Second && <li><input name=\"checks\" id={value.Second} type=\"checkbox\" /><label htmlFor={value.Second}>{value.Second}</label></li>}\r\n                {value.Third && <li><input name=\"checks\" id={value.Third} type=\"checkbox\" /><label htmlFor={value.Third}>{value.Third}</label></li>}\r\n                {value.Fourth && <li><input name=\"checks\" id={value.Fourth} type=\"checkbox\" /><label htmlFor={value.Fourth}>{value.Fourth}</label></li>}\r\n                {value.Fiveth && <li><input name=\"checks\" id={value.Fiveth} type=\"checkbox\" /><label htmlFor={value.Fiveth}>{value.Fiveth}</label></li>}\r\n            </ul>\r\n     ) : emptyRow\r\n     return row\r\n}\r\nconst emptyRow = <ul>\r\n                    <p>No hay nada</p>\r\n                    <li>u_u'</li>\r\n                </ul>\r\n\r\nconst FossilTable = () => {    \r\n    const [newTable, setNewTable] = useState(fossilListES);\r\n    const [numFossils, setNumFossils] = useState(localStorage.length);\r\n\r\n    useEffect(() => {\r\n        showCheckedboxes()   \r\n    })\r\n\r\n    return (\r\n        <FossilContainer onClick={() => setNumFossils(updateStorage())}>\r\n            <ButtonsContainer>\r\n                <label htmlFor=\"search-fossil\"></label>\r\n                <SearchInput id={\"search-fossil\"} onInput={(e) => setNewTable(sortBySearch(fossilListES, e.target.value))} placeholder={\"Buscar...\"}/>\r\n                <label htmlFor=\"reset-button\"></label>\r\n                <ResetButton onClick={() => clearCheckboxes()}>\r\n                    <picture>\r\n                        <source type=\"image/webp\" srcSet={btnIMG.ResetWEBP}/>\r\n                        <IconImage src={btnIMG.ResetPNG}  alt=\"Reset\" />\r\n                    </picture>\r\n                </ResetButton>\r\n                <label htmlFor=\"fill-button\"></label>\r\n                <FillButton onClick={() => fillCheckboxes()}>\r\n                    <picture>\r\n                        <IconImage src={btnIMG.FillPNG}  alt=\"Fill\" />\r\n                    </picture>\r\n                </FillButton>\r\n            </ButtonsContainer>\r\n\r\n            <div>\r\n                {<p>{numFossils} de 72 partes.</p>}\r\n                <FossilTableContent actualTable={newTable ? newTable : fossilListES}/>\r\n            </div>\r\n        </FossilContainer>\r\n    )\r\n}\r\n\r\nconst FossilContainer = styled.main`\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    font-size: 18px;\r\n    font-family: arial;\r\n    font-weight: normal;\r\n    \r\n    p {\r\n        font-weight: bold;\r\n        padding-top: 20px;\r\n        padding-bottom: 20px;\r\n    }\r\n    ul {\r\n        padding: 0;\r\n        padding-bottom: 20px;\r\n        border: 2px solid ghostwhite;\r\n        box-shadow: 3px 4px ghostwhite;\r\n        border-radius: 10px;\r\n        padding-left: 20px;\r\n    }\r\n    li {\r\n        margin-left: 30px;\r\n        padding-top: 10px;\r\n        padding-bottom: 10px;\r\n        list-style-type: none;\r\n    }\r\n    label {\r\n        padding-left: 5px;\r\n    }\r\n    @media screen and (max-width: 570px){\r\n        font-size: 16px;\r\n        li {\r\n            margin-left: 20px;\r\n        }\r\n    }\r\n`\r\nconst ButtonsContainer = styled.div`\r\n    background-color: #CCE1F2;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding-top: 30px;\r\n    padding-bottom: 20px;\r\n\r\n    button {\r\n        background-color: ghostwhite;\r\n    }\r\n`\r\nconst SearchInput = styled.input`\r\n    font-size: 12px;\r\n    width: 80px;\r\n    height: 35px;\r\n    margin-right: 20px;\r\n    border-radius: 5px;\r\n    padding-left: 10px;\r\n    border: 1px solid white;\r\n    box-shadow: 1px 1px black;\r\n\r\n    @media screen and (max-width: 340px){\r\n        width: 60px;\r\n        height: 25px;\r\n        margin-right: 10px;\r\n    }\r\n`\r\nconst ResetButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 10px 25px 10px 0;\r\n  border-radius: 50%;\r\n  box-shadow: 1px 1px #888888;\r\n`\r\nconst FillButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 10px 25px 10px 0;\r\n  border-radius: 50%;\r\n  box-shadow: 1px 1px #888888;\r\n`\r\nconst IconImage = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  display: block;\r\n`\r\n\r\nexport { FossilTable }","import React from 'react';\r\nimport styled from 'styled-components'\r\n//import { Helmet } from 'react-helmet'\r\n\r\nconst Description = () => {  \r\n    let pathname = window.location.pathname.replace(\"/\", \"\")\r\n\r\n    switch (pathname){\r\n        case \"turnips\":\r\n            return (\r\n                <Container>\r\n                    <h5>Encuentra gente con PIN Dodo para vender tus nabos</h5>\r\n                    <h5>Sólo observa...</h5>\r\n                    <Ellipsis />\r\n                </Container>\r\n            )\r\n        case \"bugs\":\r\n            return (\r\n                <Container>\r\n                    <h5>Lista Definitiva de bichos e insectos.</h5>\r\n                    <h5>¿Sabías que hay 19 tipos de escarabajos? <br/>Pues mira tú, no parecen pocos...</h5>\r\n                    <Ellipsis />\r\n                </Container>\r\n            )\r\n        case \"fish\":\r\n            return (\r\n                <Container>\r\n                    <h5>Lista Definitiva chulísima de peces</h5>\r\n                    <h5>¡Pesca y que no te pesquen!</h5>\r\n                    <Ellipsis />\r\n                </Container>\r\n            )\r\n        case \"sea-creatures\":\r\n            return (\r\n                <Container>\r\n                    <h5>Desde la estrella de mar hasta la alga wakame, dale que dale</h5>\r\n                    <h5>Encuentra todas las criaturas de mar, incluído yo</h5>\r\n                    <Ellipsis />\r\n                </Container>\r\n            )\r\n        case \"fossil\":\r\n            return (\r\n                <Container>\r\n                    <h5>Lista de todos los fósiles disponibles hasta ahora</h5>\r\n                    <h5>Fosile in domine</h5>\r\n                    <Ellipsis />\r\n                </Container>\r\n            )\r\n        default: \r\n            return <div>Hubo un fallo en la Matrix. Por favor, contacta con el webmaster.</div>\r\n    }\r\n}\r\n    //}\r\n//     else {\r\n//         switch (actualIndex){\r\n//             case \"Turnips\":\r\n//                 return (\r\n//                     <Container>\r\n//                         <h5>Exchange turnips for the latest prices from Twitter</h5>\r\n//                         <h5>You don't need to search anything...</h5>\r\n//                         <h5>Just watch!</h5>\r\n//                         <Ellipsis />\r\n//                     </Container>\r\n//                 )\r\n//             case \"Bugs\":\r\n//                 return (\r\n//                     <Container>\r\n//                         <h5>The Definitive List of Bugs</h5>\r\n//                         <h5>If it's not that Definitive for you, please send me your <a href={\"https://www.twitter.com/gattoalaparato\"} target=\"_blank\" rel=\"noopener noreferrer\" >thoughts</a>  </h5>\r\n//                         <h5>Good luck!</h5>\r\n//                         <Ellipsis />\r\n//                     </Container>\r\n//                 )\r\n//             case \"Fish\":\r\n//                 return (\r\n//                     <Container>\r\n//                         <h5>A really, like, really cool and Definitive List of Fish</h5>\r\n//                         <h5>Good luck fishing!</h5>\r\n//                         <Ellipsis />\r\n//                     </Container>\r\n//                 )\r\n//             case \"Sea-creatures\":\r\n//                 return (\r\n//                     <Container>\r\n//                         <h5>Find all the deep-sea creatures in the island.</h5>\r\n//                         <h5>Leave a breadcrumb trail so you don't get lost!</h5>\r\n//                         <Ellipsis />\r\n//                     </Container>\r\n//                 )\r\n//             case \"Fossil\":\r\n//                 return (\r\n//                     <Container>\r\n//                         <h5>Search for the latest oldest fossils in the town</h5>\r\n//                         <h5>So smalls</h5>\r\n//                         <Ellipsis />\r\n//                     </Container>\r\n//                 )\r\n//             default: \r\n//                 return <div>Error loading description. Please contact the webmaster</div>\r\n//         }\r\n//     }\r\n//}\r\n\r\nconst Container = styled.header`\r\n    background-color: #F5F2E3;\r\n    display: grid;\r\n    padding-top: 30px;\r\n    text-align: center;\r\n    max-height: 320px;\r\n    h5 {\r\n        width: 70%;\r\n        margin: 0 auto;\r\n        font-size: 18px;\r\n    }\r\n    @media screen and (max-width: 570px){\r\n        h5 {\r\n            font-size: 16px;\r\n        }\r\n    }\r\n    @media screen and (max-width: 420px){\r\n        h5 {\r\n            width: 80%;\r\n        }\r\n      }\r\n`\r\nconst Ellipsis = styled.div`\r\n    width: 100%;\r\n    height: 30px;\r\n    margin-top: 30px;\r\n    border-top-left-radius: 100%;\r\n    border-top-right-radius: 100%;\r\n    background-color: #CCE1F2;\r\n`\r\nexport { Description }","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Policy = () => {\r\n    return (\r\n        <PolicyContainer>\r\n            <DescContainer>\r\n                <Logo src=\"logo.png\" alt=\"Logo de la web una silla con forma de rana\" />\r\n                <Ellipsis />\r\n            </DescContainer>\r\n            <PolicyContent>\r\n                <h3>POLITICA DE COOKIES</h3>\r\n                <p>Las cookies son pequeñas cantidades de información que se almacenan en el navegador utilizado por cada usuario para que el servidor recuerde cierta información que posteriormente pueda utilizar.</p>\r\n\r\n                <div>\r\n                    <h4>Tipos de Cookies que utilizamos.</h4>\r\n                    <p>Esta página web utiliza cookies de terceros que son aquellas que se envían a tu ordenador o terminal desde un dominio o una página web que no es gestionada por nosotros, sino por otra entidad que trata los datos obtenidos a través de las cookies.</p>\r\n                </div>\r\n\r\n                <div>\r\n                    <p>En este caso las Cookies son utilizadas con fines estadísticos relacionados con las visitas que recibe y las páginas que se consultan, quedando aceptado su uso al navegar por ella.</p>\r\n                    <p>_ga (Google) Se usa para distinguir a los usuarios. Duración: 2 años</p>\r\n                    <p>_gid (Google) Se usa para distinguir a los usuarios. Duración: 24h</p>\r\n                    <p>_gat (Google) Se usa para limitar el porcentaje de solicitudes. Duración: 1 min</p>\r\n                </div>\r\n                <div>\r\n                    <p>Para informarse sobre cómo eliminar las cookies de su explorador: <br/>\r\n                    <a href=\"https://www.google.com/intl/es_es/policies/technologies/types/\" target=\"_blank\" rel=\"noopener noreferrer\">haga clic aquí</a>.</p>\r\n                    <br/>\r\n                    <p>Para informarse sobre cómo eliminar las cookies de su explorador:</p>\r\n                    <ul>\r\n                        <li><a href=\"https://support.mozilla.org/es/kb/habilitar-y-deshabilitar-cookies-sitios-web-rastrear-preferencias\" target=\"_blank\" rel=\"noopener noreferrer\">Firefox</a></li>\r\n                        <li><a href=\"https://support.google.com/chrome/answer/95647?hl=es\" target=\"_blank\" rel=\"noopener noreferrer\">Chrome</a></li>\r\n                        <li><a href=\"https://ceporros.com\">Internet Explorer</a></li>\r\n                        <li><a href=\"https://support.apple.com/kb/PH19214?viewlocale=es_ES&amp;locale=es_ES\" target=\"_blank\" rel=\"noopener noreferrer\">Safari</a></li>\r\n                        <li><a href=\"https://presencialismo.com\" target=\"_blank\" rel=\"noopener noreferrer\">Opera</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <h4>Enlaces a Terceros.</h4>\r\n                    <p>Este sitio web pudiera contener en laces a otros sitios que pudieran ser de su interés. Una vez que usted de clic en estos enlaces y abandone nuestra página, ya no tenemos control sobre al sitio al que es redirigido y por lo tanto no somos responsables de los términos o privacidad ni de la protección de sus datos en esos otros sitios terceros. Dichos sitios están sujetos a sus propias políticas de privacidad por lo cual es recomendable que los consulte para confirmar que usted está de acuerdo con estas.</p>\r\n                </div>\r\n            </PolicyContent>            \r\n        </PolicyContainer>\r\n    )\r\n}\r\n\r\nconst PolicyContainer = styled.main`\r\n    background-color: #CCE1F2;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    a {\r\n        color: blue;\r\n        font-weight: bold;\r\n    }\r\n    h4 {\r\n        padding-top 10px;\r\n        font-weight: bold;\r\n    }\r\n    div {\r\n        padding-top: 20px;\r\n    }\r\n`\r\nconst DescContainer = styled.header`\r\n    background-color: #F5F2E3;\r\n    display: grid;\r\n    padding-top: 30px;\r\n    text-align: center;\r\n    max-height: 320px;\r\n    h5 {\r\n        width: 70%;\r\n        margin: 0 auto;\r\n        font-size: 18px;\r\n    }\r\n    @media screen and (max-width: 570px){\r\n        h5 {\r\n            font-size: 16px;\r\n        }\r\n    }\r\n    @media screen and (max-width: 420px){\r\n        h5 {\r\n            width: 80%;\r\n        }\r\n    }\r\n`\r\nconst Ellipsis = styled.div`\r\n    width: 100%;\r\n    height: 20px;\r\n    margin-top: 30px;\r\n    border-top-left-radius: 100%;\r\n    border-top-right-radius: 100%;\r\n    background-color: #CCE1F2;\r\n`\r\nconst PolicyContent = styled.div`\r\n    width: 80%;\r\n    margin: auto;\r\n    padding-top: 30px;\r\n    \r\n    span {\r\n        color: green;\r\n    }\r\n    iframe {\r\n        display: block;\r\n        margin: 0 auto;\r\n        margin-top: 30px;\r\n        width: 480px;\r\n        height: 360px;\r\n        border-radius: 18px;\r\n        @media screen and (max-width: 570px){\r\n            width: 360px;\r\n            height: 280px;\r\n        }\r\n        @media screen and (max-width: 420px){\r\n            width: 280px;\r\n            height: 200px;\r\n        }\r\n    }\r\n    @media screen and (max-width: 340px){\r\n        width: 85%;\r\n    }\r\n`\r\nconst Logo = styled.img`\r\n    width: 170px;\r\n    display: block;\r\n    margin: 0 auto;\r\n    padding-bottom: 10px;\r\n    @media screen and (max-width: 570px){\r\n        width: 140px;\r\n    }\r\n`\r\n\r\nexport { Policy }","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Popup = () =>  {\r\n    function acceptPolicy(e){\r\n        let popup = e.target.parentNode\r\n        popup.style.display = \"none\"\r\n    }\r\n    return(\r\n      <Container>\r\n          <p>Utilizamos cookies anónimas de Google Analytics para mejorar la web según lo que te guste. Más información en <a href=\"/policy\"> Política de Cookies</a>.</p>\r\n          <button onClick={(e) => acceptPolicy(e)}>OK</button>\r\n      </Container>\r\n  )\r\n}\r\n\r\n\r\nconst Container = styled.div`\r\n    padding: 10px 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    bottom: 0px;\r\n    width: 100%;\r\n    background-color: ghostwhite;\r\n    \r\n    left: 0px;\r\n    p {\r\n        padding: 0 10px;\r\n    }\r\n    button {\r\n        padding: 10px 12px;\r\n        font-family: inherit; /* 1 */\r\n        font-size: 100%; /* 1 */\r\n        margin: 0 10px;\r\n    }\r\n    a {\r\n        color: var(--colorFooter);\r\n        font-weight: bold;\r\n        font-style: italic;\r\n    }\r\n`\r\nexport { Popup } ","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Footer = () => {\r\n    //let backTo_str = \"Back to top\"\r\n    let backTo_str = \"Volver parriba\"\r\n    // if(localStorage.getItem(\"language\") === \"es\"){\r\n    // }\r\n    return (\r\n        <FooterContainer>\r\n            <br/>\r\n            <BackToTop href=\"#top\">{backTo_str}</BackToTop>\r\n            <br/>\r\n            <br/><br/>\r\n            <Disclaimer>\r\n                <p>Created by <a href=\"https://twitter.com/gattoalaparato\" target=\"_blank\" rel=\"noopener noreferrer\">@Gattoalaparato</a></p>\r\n                <p>2020 - Animal Browsing v1.2</p>\r\n            </Disclaimer>\r\n        </FooterContainer>\r\n    )\r\n}\r\nconst FooterContainer = styled.footer`\r\n    font-size: 14px;\r\n    padding-top: 20px;\r\n`\r\nconst BackToTop = styled.a`\r\n    padding-left: 20px;\r\n`\r\nconst Disclaimer = styled.div`\r\n    font-weight: normal;\r\n    background-color: #F5F2E3;\r\n    padding: 20px 10px 20px 10px;\r\n    border-radius: 4px;\r\n    padding-bottom: 20px;\r\n`\r\n\r\nexport { Footer }","import React from 'react';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst RHelmet = () => {\r\n    let pathname = window.location.pathname.replace(\"/\", \"\")\r\n    if(!pathname) pathname = \"home\"\r\n    \r\n    let helmet = {\r\n        \"home_title\" : \"Animal Browsing, tu kit para sobrevivir en Animal Crossing.\",\r\n        \"home_desc\" : \"Encuentra aquí nabos a buen precio, PIN DODOs y todo sobre bichos, peces, criaturas del mar, fósiles y mucho más en Animal Crossing: New Horizons.\",\r\n        \"turnips_title\" : \"Nabos de Hoy con Pin DODO | Animal Crossing\",\r\n        \"turnips_desc\" : \"🌱 Encuentra códigos DODO de islas con nabos de hoy al mejor precio. \",\r\n        \"bugs_title\" : \"Lista Completa de Bichos | Animal Crossing: New Horizons.\", \r\n        \"bugs_desc\" : \"Todo sobre Bichos de Animal Crossing: New Horizons. Mariposa colias, bianor, Cigarra gigante, escarabajo ciervo sierra...\", \r\n        \"fish_title\" : \"🐟 Todos los Peces | Animal Crossing: New Horizons.\", \r\n        \"fish_desc\" : \"Lista de Todos los Peces de Animal Crossing. Amarguillo, Koi, Siluro, Salmón, Arowana, Pirarucú, Pez luna...\", \r\n        \"sea-creatures_title\" : \"Lista Completa de Criaturas Marinas | Animal Crossing: New Horizons.\", \r\n        \"sea-creatures_desc\" : \"Descubre todo sobre Criaturas Marinas y sus secretos. Alga wakame, Estrella de mar, Abulón, Buccino...\",     \r\n        \"fossil_title\" : \"Lista Completa de Fósiles | Animal Crossing: New Horizons.\", \r\n        \"fossil_desc\" : \"Encuentra aquí todos los fósiles. Acantostega, Anquilosaurio, Pteranodonte, Tiranosaurio, Megaloceros, Iguanodonte...\",\r\n        \"shop_title\": \"Tienda Online de Animal Crossing: Juegos, peluches, fundas...\",\r\n        \"shop_desc\": \"Desde peluches hasta videojuegos, encuentra lo que buscas y mucho más en nuestra tienda online.\" \r\n    }\r\n\r\n    return (\r\n        <Helmet>\r\n            <html lang=\"es\" /> \r\n            <title>{helmet[pathname+ \"_title\"]}</title>\r\n            <meta name=\"robots\" content=\"NOODP\" />\r\n            <meta name=\"description\" content={helmet[pathname+ \"_desc\"]} />\r\n            {pathname === \"home\" && <link rel=\"canonical\" href={\"https://animalbrowsing.com\"}></link>}\r\n            {pathname !== \"home\" && <link rel=\"canonical\" href={\"https://animalbrowsing.com/\" +pathname}></link>}\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport { RHelmet }","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport products from '../data/shop.json'\r\nimport ReactGA from 'react-ga';\r\n\r\nconst Shop = () => {\r\n\r\n    const ClickHandler = (prod) => {\r\n        ReactGA.event({\r\n            category: 'Shop Product',\r\n            action: \"Clicked \"+ prod.substring(0, 70)\r\n        })\r\n        console.log(prod.substring(0, 20))\r\n        console.log(\"clicked 11\")\r\n        \r\n    }\r\n    return (\r\n        <HomeContainer>\r\n            <DescContainer>\r\n                <h5>Tienda de Animal Crossing</h5>\r\n                <h5>Consigue todos los tipos de peluches de Animal Crossing en nuestra tienda afiliada.</h5>\r\n                <h5>Fundas, mandos... y el videojuego para regalarle a quien más quieras.</h5>\r\n                <h5 style={{fontSize: 14}}>*No estamos afiliados de ninguna manera a Tom Nook.</h5>\r\n                <Ellipsis />\r\n            </DescContainer>\r\n            <HomeContent>\r\n            {products.map((prod, ind) => (\r\n                    <Product onClick={e => ClickHandler(prod.title)} key={ind} href={prod.link} rel=\"noopener noreferrer\" target=\"_blank\"><img src={prod.img} alt={prod.alt} />\r\n                        <figure>\r\n                            <Title>{prod.title}</Title>\r\n                            <Price>{prod.price_str}</Price>\r\n                        </figure>\r\n                    </Product>\r\n                ))}\r\n            </HomeContent>\r\n\r\n            <Btn><a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://amzn.to/3k2Gamr\">Ver más ofertas en AMAZON</a></Btn>\r\n\r\n        </HomeContainer>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst HomeContainer = styled.main`\r\n    background-color: #CCE1F2;\r\n`\r\nconst DescContainer = styled.header`\r\n    grid-area: a;\r\n    background-color: #F5F2E3;\r\n    display: grid;\r\n    padding-top: 30px;\r\n    text-align: center;\r\n    max-height: 320px;\r\n    margin-bottom: 35px;\r\n    h5 {\r\n        width: 70%;\r\n        margin: 0 auto;\r\n        font-size: 18px;\r\n    }\r\n    @media screen and (max-width: 570px){\r\n        h5 {\r\n            font-size: 16px;\r\n        }\r\n    }\r\n    @media screen and (max-width: 420px){\r\n        h5 {\r\n            width: 80%;\r\n        }\r\n    }\r\n`\r\nconst Ellipsis = styled.div`\r\n    width: 100%;\r\n    height: 20px;\r\n    margin-top: 30px;\r\n    border-top-left-radius: 100%;\r\n    border-top-right-radius: 100%;\r\n    background-color: #CCE1F2;\r\n`\r\nconst HomeContent = styled.div`\r\n    display: grid;\r\n    grid-template-columns: auto auto auto;\r\n    grid-row-gap: 40px;\r\n    justify-content: space-evenly;\r\n    padding: 32px 0px;\r\n    align-content: center;\r\n    align-items: baseline;\r\n    background: #CCE1F2;\r\n\r\n    @media screen and (max-width: 900px){\r\n        grid-template-columns: auto auto;\r\n    }\r\n`\r\nconst Product = styled.a`\r\n    color: black;\r\n    figure {\r\n        padding: 0px;\r\n        margin: 0;\r\n        max-width: 200px;\r\n    }\r\n    &:hover {\r\n        img {\r\n            opacity: 0.6;\r\n        }\r\n    }\r\n    img {\r\n        display: block;\r\n        margin: 0 auto;\r\n        max-width: 200px;\r\n        max-height: 200px;\r\n        margin-bottom: 10px;\r\n        object-fit: contain;\r\n        border-radius: 20px;\r\n        box-shadow: 4px 4px 1px white;\r\n    }\r\n\r\n    @media screen and (max-width: 900px){\r\n        font-size: 16px;\r\n        img {\r\n            width: 42vw;\r\n            box-shadow: 0px 0px 0px white;\r\n        }\r\n    }\r\n    @media screen and (max-width: 420px){\r\n        font-size: 14px;\r\n    }\r\n    @media screen and (max-width: 360px){\r\n        font-size: 12px;\r\n    }\r\n`\r\nconst Text = styled.div``\r\nconst Title = styled.figcaption`\r\n    font-weight: bold;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 3;\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    text-align: center;\r\n`\r\nconst Price = styled.figcaption`\r\n    font-size: 15px;\r\n    text-align: center;\r\n`\r\n\r\nconst Btn = styled.button`\r\n    display: block;\r\n    margin: 32px auto;\r\n    padding: 15px 15px 15px 15px;\r\n    font-size: 16px;\r\n    background-color: white;\r\n    font-weight: bold;\r\n    border-radius: 12px;\r\n    border: 1px solid black;\r\n    a {\r\n        color: black;\r\n    }\r\n`\r\n\r\nexport { Shop }","import React from 'react';\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\nimport { Home } from './content/Home'\r\nimport { Turnip } from './content/Turnip'\r\nimport { BugsTable } from './content/BugsTable'\r\nimport { FishTable } from './content/FishTable'\r\nimport { SeaTable } from './content/SeaTable'\r\nimport { FossilTable } from './content/FossilTable'\r\nimport { Description } from './content/Description' \r\nimport { Policy } from './content/Policy' \r\nimport { Popup } from './content/Popup'\r\nimport { Footer } from './content/Footer'\r\nimport { RHelmet } from './content/Helmet'\r\nimport { Shop } from './content/Shop'\r\nimport { Router, Route, NavLink, Switch } from \"react-router-dom\";\r\nimport { createBrowserHistory } from 'history';\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('UA-162043648-2');\r\nconst history = createBrowserHistory();\r\nhistory.listen(location => {\r\n  ReactGA.set({ page: location.pathname })\r\n  ReactGA.pageview(location.pathname)\r\n});\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  html, body {\r\n    height: 100%; \r\n  \r\n  }\r\n  body {\r\n    font-family: sans-serif, Arial;\r\n    margin: 0;\r\n  }\r\n  p, h1, h2, h3, h4, h5, h6 {\r\n    margin: 0;\r\n  }\r\n  h5 {\r\n    font-size: 14px;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: blue;\r\n  }\r\n  button {\r\n    border: 0;\r\n  }\r\n` \r\n\r\n// if(navigator.language.includes((\"es\" || \"en\"))){ // Supported languages\r\n//   localStorage.setItem(\"language\", navigator.language.slice(0, 2))\r\n// }\r\n// else {\r\n//   localStorage.setItem(\"language\", \"en\") // EN as default\r\n// }\r\n\r\nconst App = () => {\r\n  let section_names = [\"Inicio \", \"Nabos \", \"Bichos \", \"Peces \", \"Criaturas Marinas \", \"Fósiles \", \"Tienda \", \"Lang ES\"]\r\n  return (\r\n    <AppContainer>\r\n      <GlobalStyles />\r\n      <BackgroundImage />\r\n      <Router history={history}>\r\n        <NavbarContent id={\"top\"}>\r\n          <NavLink to=\"/\" exact name=\"home\" activeClassName=\"active\" >\r\n            {section_names[0]}\r\n          </ NavLink>\r\n          <NavLink to=\"/turnips\" name=\"turnips\" exact activeClassName=\"active\" >\r\n            {section_names[1]}\r\n          </ NavLink>\r\n          <NavLink to=\"/bugs\" name=\"bugs\" exact activeClassName=\"active\" >\r\n            {section_names[2]}\r\n          </ NavLink>\r\n          <NavLink to=\"/fish\" name=\"fish\" exact activeClassName=\"active\" >\r\n            {section_names[3]}\r\n          </ NavLink>\r\n          <NavLink to=\"/sea-creatures\" name=\"sea-creatures\" exact activeClassName=\"active\" >\r\n            {section_names[4]}\r\n          </ NavLink>\r\n          <NavLink to=\"/fossil\" name=\"fossil\" exact activeClassName=\"active\" >\r\n            {section_names[5]}\r\n          </ NavLink>\r\n          <NavLink to=\"/shop\" name=\"shop\" exact activeClassName=\"active\" >\r\n            {section_names[6]}\r\n          </ NavLink>\r\n        </ NavbarContent> \r\n\r\n        <Switch>\r\n          <Route path=\"/turnips\">\r\n            <RHelmet />\r\n            <Description />\r\n            <Turnip />\r\n            <Footer />\r\n          </ Route>\r\n          <Route path=\"/bugs\">\r\n            <RHelmet />\r\n            <Description />\r\n            <BugsTable />\r\n            <Footer />\r\n          </ Route>\r\n          <Route path=\"/fish\">\r\n            <RHelmet />\r\n            <Description />\r\n            <FishTable />\r\n            <Footer />\r\n          </ Route>\r\n          <Route path=\"/sea-creatures\">\r\n            <RHelmet />\r\n            <Description />\r\n            <SeaTable />\r\n            <Footer />\r\n          </ Route>\r\n          <Route path=\"/fossil\">\r\n            <RHelmet />\r\n            <Description />\r\n            <FossilTable />\r\n            <Footer />\r\n          </ Route>\r\n          <Route path=\"/shop\">\r\n            <RHelmet />\r\n            <Shop />\r\n            <Footer />\r\n          </ Route>\r\n          <Route path=\"/policy\">\r\n            <Policy />\r\n            <Footer />\r\n          </ Route>\r\n          <Route path=\"/\">\r\n            <RHelmet />\r\n            <Home />\r\n            <Footer />\r\n          </ Route>\r\n        </ Switch>\r\n      </ Router>\r\n      <Popup/>\r\n    </ AppContainer>\r\n  );\r\n}\r\n\r\nconst NavbarContent = styled.nav`\r\n  width: 100%;\r\n  min-height: 60px;\r\n  background-color: rgb(255, 131, 97);\r\n  font-size: 18px;\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 0px 0px 15px 0px;\r\n  \r\n  a {\r\n    max-width: 85px;\r\n    text-align: center;\r\n    color: ghostwhite;\r\n    padding: 15px 0px 0px 0px;\r\n  }\r\n  a.active {\r\n    color: rgb(85, 50, 20);\r\n  }\r\n  \r\n  @media screen and (max-width: 460px){\r\n    \r\n    grid-template-rows: auto auto;\r\n\r\n   \r\n  }\r\n  @media screen and (max-width: 340px){\r\n      \r\n  }\r\n`\r\nconst BackgroundImage = styled.div`\r\n  min-height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n\r\n  &::before {\r\n    background-image: url(\"../img/bckground3-min.jpg\");\r\n    background-repeat: no-repeat;\r\n    background-position: center top;\r\n    background-size: cover;\r\n    content: '';\r\n    height: 100%;\r\n    left: 0;\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    will-change: transform;\r\n    z-index: -1;\r\n  }\r\n`\r\nconst AppContainer = styled.div`\r\n  font-weight: bold;\r\n  max-width: 1000px;\r\n  background-color: #CCE1F2;\r\n  margin: 0 auto;\r\n`\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config){\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator){\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin){\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost){\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config){\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null){\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed'){\r\n            if (navigator.serviceWorker.controller){\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate){\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess){\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config){\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ){\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister(){\r\n  if ('serviceWorker' in navigator){\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}